OpenSSL 로 ROOT CA 생성 및 SSL 인증서 발급
https://www.lesstif.com/system-admin/openssl-root-ca-ssl-6979614.html

1. 인증 기관(Certificate Authority, CA)키 생성
1) Private Key 생성
openssl genrsa -aes256 -out SimpleRest-RootCA.key 2048
2) 환경파일 생성
> rootca_openssl.conf
[ req ]
default_bits            = 2048
default_md              = sha256
default_keyfile         = SimpleRest-RootCA.key
distinguished_name      = req_distinguished_name
extensions             = v3_ca
req_extensions = v3_ca
 
[ v3_ca ]
basicConstraints       = critical, CA:TRUE, pathlen:0
subjectKeyIdentifier   = hash
##authorityKeyIdentifier = keyid:always, issuer:always
keyUsage               = keyCertSign, cRLSign
nsCertType             = sslCA, emailCA, objCA
[req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = KR
countryName_min                 = 2
countryName_max                 = 2

# 회사명 입력
organizationName              = Organization Name (eg, company)
organizationName_default      = SimpleRest
 
# 부서 입력
#organizationalUnitName          = Organizational Unit Name (eg, section)
#organizationalUnitName_default  = Condor Project
 
# SSL 서비스할 domain 명 입력
commonName                      = Common Name (eg, your name or your server's hostname)
commonName_default              = SimpleRest Self Signed CA
commonName_max                  = 64 

3) CSR(Certificate Signing Request) 생성
openssl req -new -key SimpleRest-RootCA.key -out SimpleRest-RootCA.csr -config rootca_openssl.conf
4) 인증서(Public Key) 생성
openssl x509 -req -days 3650 -extensions v3_ca -set_serial 1 -in SimpleRest-RootCA.csr -signkey SimpleRest-RootCA.key -out SimpleRest-RootCA.pem -extfile rootca_openssl.conf

2. Site 인증서 생성
1) Private Key 생성
openssl genrsa -aes256 -out SimpleRest.key 2048
# 패스워드 삭제(선택)
copy  SimpleRest.key  SimpleRest.key.enc
openssl rsa -in  SimpleRest.key.enc -out SimpleRest.key
2) 환경파일 생성
host_openssl.conf
[ req ]
default_bits            = 2048
default_md              = sha256
default_keyfile         = SimpleRest-RootCA.key
distinguished_name      = req_distinguished_name
extensions             = v3_user
## 인증서 요청시에도 extension 이 들어가면 authorityKeyIdentifier 를 찾지 못해 에러가 나므로 막아둔다.
## req_extensions = v3_user

[ v3_user ]
# Extensions to add to a certificate request
basicConstraints = CA:FALSE
authorityKeyIdentifier = keyid,issuer
subjectKeyIdentifier = hash
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
## SSL 용 확장키 필드
extendedKeyUsage = serverAuth,clientAuth
subjectAltName          = @alt_names
[ alt_names]
## Subject AltName의 DNSName field에 SSL Host 의 도메인 이름을 적어준다.
## 멀티 도메인일 경우 *.SimpleRest.com 처럼 쓸 수 있다.
DNS.1   = www.SimpleRest.com
DNS.2   = SimpleRest.com
DNS.3   = *.SimpleRest.com

[req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = KR
countryName_min                 = 2
countryName_max                 = 2

# 회사명 입력
organizationName              = Organization Name (eg, company)
organizationName_default      = SimpleRest
 
# 부서 입력
organizationalUnitName          = Organizational Unit Name (eg, section)
organizationalUnitName_default  = SimpleRest SSL Project
 
# SSL 서비스할 domain 명 입력
commonName                      = Common Name (eg, your name or your server's hostname)
commonName_default              = SimpleRest.com
commonName_max                  = 64

3) CSR(Certificate Signing Request) 생성
openssl req -new -key SimpleRest.key -out SimpleRest.csr -config host_openssl.conf
4) 인증서(Public Key) 생성
openssl x509 -req -days 1825 -extensions v3_user -in SimpleRest.csr -CA SimpleRest-RootCA.pem -CAcreateserial -CAkey  SimpleRest-RootCA.key -out SimpleRest.crt  -extfile host_openssl.conf